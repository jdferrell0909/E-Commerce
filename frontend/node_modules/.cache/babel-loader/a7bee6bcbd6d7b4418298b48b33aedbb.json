{"ast":null,"code":"import React, { useEffect } from \"react\"; // import { Link } from \"react-router-dom\";\n// import { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import Message from \"../components/Message\";\n// import Loader from \"../components/Loader\";\n// import { getOrderDetails } from \"../actions/orderActions\";\n\nconst OrderScreen = ({\n  match\n}) => {// const orderId = match.params.id;\n  // const dispatch = useDispatch();\n  // const orderDetails = useSelector((state) => state.orderDetails);\n  // const { order, loading, error } = orderDetails;\n  // if (!loading) {\n  //   // Calculate prices\n  //   const addDecimals = (num) => {\n  //     return (Math.round(num * 100) / 100).toFixed(2);\n  //   };\n  //   order.itemsPrice = addDecimals(\n  //     order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n  //   );\n  // }\n  // useEffect(() => {\n  //   dispatch(getOrderDetails(orderId));\n  // });\n  // return loading ? (\n  //   <Loader />\n  // ) : error ? (\n  //   <Message variant=\"danger\">{error}</Message>\n  // ) : (\n  //   <>\n  //     <h1>Order {order._id}</h1>\n  //     <Row>\n  //       <Col md={8}>\n  //         <ListGroup variant=\"flush\">\n  //           <ListGroup.Item>\n  //             <h2>Shipping</h2>\n  //             {/* <p>\n  //               <strong>Name: </strong>\n  //             </p>\n  //             {order.user.name}\n  //             <p>\n  //               <strong>Email: </strong>\n  //               <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\n  //             </p> */}\n  //             <p>\n  //               <strong>Address: </strong>\n  //               {order.shippingAddress.address}, {order.shippingAddress.city},{\" \"}\n  //               {order.shippingAddress.postalCode},{\" \"}\n  //               {order.shippingAddress.country}\n  //             </p>\n  //           </ListGroup.Item>\n  //           <ListGroup.Item>\n  //             <h2>Payment Method</h2>\n  //             <strong>Method: </strong>\n  //             {order.paymentMethod}\n  //           </ListGroup.Item>\n  //           <ListGroup.Item>\n  //             <h2>Order Items</h2>\n  //             {order.orderItems.length === 0 ? (\n  //               <Message>Order is empty</Message>\n  //             ) : (\n  //               <ListGroup variant=\"flush\">\n  //                 {order.orderItems.map((item, index) => (\n  //                   <ListGroup.Item key={index}>\n  //                     <Row>\n  //                       <Col md={1}>\n  //                         <Image\n  //                           src={item.image}\n  //                           alt={item.name}\n  //                           fluid\n  //                           rounded\n  //                         />\n  //                       </Col>\n  //                       <Col>\n  //                         <Link to={`/product/${item.product}`}>\n  //                           {item.name}\n  //                         </Link>\n  //                       </Col>\n  //                       <Col md={4}>\n  //                         {item.qty} x ${item.price} = ${item.qty * item.price}\n  //                       </Col>\n  //                     </Row>\n  //                   </ListGroup.Item>\n  //                 ))}\n  //               </ListGroup>\n  //             )}\n  //           </ListGroup.Item>\n  //         </ListGroup>\n  //       </Col>\n  //       <Col md={4}>\n  //         <Card>\n  //           <ListGroup variant=\"flush\">\n  //             <ListGroup.Item>\n  //               <h2>Order Summary</h2>\n  //             </ListGroup.Item>\n  //             <ListGroup.Item>\n  //               <Row>\n  //                 <Col>Items</Col>\n  //                 <Col>${order.itemsPrice}</Col>\n  //               </Row>\n  //             </ListGroup.Item>\n  //             <ListGroup.Item>\n  //               <Row>\n  //                 <Col>Shipping</Col>\n  //                 <Col>${order.shippingPrice}</Col>\n  //               </Row>\n  //             </ListGroup.Item>\n  //             <ListGroup.Item>\n  //               <Row>\n  //                 <Col>Tax</Col>\n  //                 <Col>${order.taxPrice}</Col>\n  //               </Row>\n  //             </ListGroup.Item>\n  //             <ListGroup.Item>\n  //               <Row>\n  //                 <Col>Total</Col>\n  //                 <Col>${order.totalPrice}</Col>\n  //               </Row>\n  //             </ListGroup.Item>\n  //           </ListGroup>\n  //         </Card>\n  //       </Col>\n  //     </Row>\n  //   </>\n  // );\n};\n\n_c = OrderScreen;\nexport default OrderScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderScreen\");","map":{"version":3,"sources":["/Users/jamesferrell/Desktop/ecomm/frontend/src/screens/OrderScreen.js"],"names":["React","useEffect","OrderScreen","match"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe,CACjpID;;KAAMD,W;AAsIN,eAAeA,WAAf","sourcesContent":["import React, { useEffect } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import Message from \"../components/Message\";\n// import Loader from \"../components/Loader\";\n// import { getOrderDetails } from \"../actions/orderActions\";\n\nconst OrderScreen = ({ match }) => {\n  // const orderId = match.params.id;\n\n  // const dispatch = useDispatch();\n\n  // const orderDetails = useSelector((state) => state.orderDetails);\n  // const { order, loading, error } = orderDetails;\n\n  // if (!loading) {\n  //   // Calculate prices\n  //   const addDecimals = (num) => {\n  //     return (Math.round(num * 100) / 100).toFixed(2);\n  //   };\n\n  //   order.itemsPrice = addDecimals(\n  //     order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n  //   );\n  // }\n\n  // useEffect(() => {\n  //   dispatch(getOrderDetails(orderId));\n  // });\n\n  // return loading ? (\n  //   <Loader />\n  // ) : error ? (\n  //   <Message variant=\"danger\">{error}</Message>\n  // ) : (\n  //   <>\n  //     <h1>Order {order._id}</h1>\n  //     <Row>\n  //       <Col md={8}>\n  //         <ListGroup variant=\"flush\">\n  //           <ListGroup.Item>\n  //             <h2>Shipping</h2>\n  //             {/* <p>\n  //               <strong>Name: </strong>\n  //             </p>\n  //             {order.user.name}\n  //             <p>\n  //               <strong>Email: </strong>\n  //               <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\n  //             </p> */}\n  //             <p>\n  //               <strong>Address: </strong>\n  //               {order.shippingAddress.address}, {order.shippingAddress.city},{\" \"}\n  //               {order.shippingAddress.postalCode},{\" \"}\n  //               {order.shippingAddress.country}\n  //             </p>\n  //           </ListGroup.Item>\n\n  //           <ListGroup.Item>\n  //             <h2>Payment Method</h2>\n  //             <strong>Method: </strong>\n  //             {order.paymentMethod}\n  //           </ListGroup.Item>\n\n  //           <ListGroup.Item>\n  //             <h2>Order Items</h2>\n  //             {order.orderItems.length === 0 ? (\n  //               <Message>Order is empty</Message>\n  //             ) : (\n  //               <ListGroup variant=\"flush\">\n  //                 {order.orderItems.map((item, index) => (\n  //                   <ListGroup.Item key={index}>\n  //                     <Row>\n  //                       <Col md={1}>\n  //                         <Image\n  //                           src={item.image}\n  //                           alt={item.name}\n  //                           fluid\n  //                           rounded\n  //                         />\n  //                       </Col>\n\n  //                       <Col>\n  //                         <Link to={`/product/${item.product}`}>\n  //                           {item.name}\n  //                         </Link>\n  //                       </Col>\n\n  //                       <Col md={4}>\n  //                         {item.qty} x ${item.price} = ${item.qty * item.price}\n  //                       </Col>\n  //                     </Row>\n  //                   </ListGroup.Item>\n  //                 ))}\n  //               </ListGroup>\n  //             )}\n  //           </ListGroup.Item>\n  //         </ListGroup>\n  //       </Col>\n  //       <Col md={4}>\n  //         <Card>\n  //           <ListGroup variant=\"flush\">\n  //             <ListGroup.Item>\n  //               <h2>Order Summary</h2>\n  //             </ListGroup.Item>\n\n  //             <ListGroup.Item>\n  //               <Row>\n  //                 <Col>Items</Col>\n  //                 <Col>${order.itemsPrice}</Col>\n  //               </Row>\n  //             </ListGroup.Item>\n\n  //             <ListGroup.Item>\n  //               <Row>\n  //                 <Col>Shipping</Col>\n  //                 <Col>${order.shippingPrice}</Col>\n  //               </Row>\n  //             </ListGroup.Item>\n\n  //             <ListGroup.Item>\n  //               <Row>\n  //                 <Col>Tax</Col>\n  //                 <Col>${order.taxPrice}</Col>\n  //               </Row>\n  //             </ListGroup.Item>\n\n  //             <ListGroup.Item>\n  //               <Row>\n  //                 <Col>Total</Col>\n  //                 <Col>${order.totalPrice}</Col>\n  //               </Row>\n  //             </ListGroup.Item>\n  //           </ListGroup>\n  //         </Card>\n  //       </Col>\n  //     </Row>\n  //   </>\n  // );\n};\n\nexport default OrderScreen;\n"]},"metadata":{},"sourceType":"module"}